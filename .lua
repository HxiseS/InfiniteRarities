--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.5) ~  Much Love, Ferib 

]]--

do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;while true do if (v0==2) then v7=table.concat;v8=table.insert;v9=math.ldexp;v0=3;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (v0==3) then v10=getfenv or function()return _ENV;end ;v11=setmetatable;v12=pcall;v0=4;end if (v0==5) then v16=nil;v16=function(v25,v26,...)local v27=1;local v28;v25=v5(v4(v25,5),"..",function(v29)if (v2(v29,2)==79) then local v79=0;while true do if (v79==0) then v28=v1(v4(v29,1,1));return "";end end else local v80=0;local v81;while true do if (0==v80) then v81=v3(v1(v29,16));if v28 then local v123=0;local v124;while true do if (v123==1) then return v124;end if (v123==0) then v124=v6(v81,v28);v28=nil;v123=1;end end else return v81;end break;end end end end);local function v30(v31,v32,v33)if v33 then local v82=(v31/(((1972 -(1940 + 30)) -0)^(v32-(1 + 0))))%((692 -(137 + 553))^(((v33-(1 + 0)) -(v32-(1113 -(520 + 592)))) + 1)) ;return v82-(v82%(3 -2)) ;else local v83=0 -0 ;local v84;while true do if (v83==(1769 -(1113 + 656))) then v84=(2 + 0)^(v32-(517 -(23 + 493))) ;return (((v31%(v84 + v84))>=v84) and ((10 -6) -3)) or (359 -((427 -(200 + 61)) + 193)) ;end end end end local function v34()local v47=v2(v25,v27,v27);v27=v27 + 1 ;return v47;end local function v35()local v48,v49=v2(v25,v27,v27 + 2 );v27=v27 + 1 + 1 ;return (v49 * (826 -(350 + 220))) + v48 ;end local function v36()local v50=0 -(0 + 0) ;local v51;local v52;local v53;local v54;while true do if (v50==0) then v51,v52,v53,v54=v2(v25,v27,v27 + 1 + 2 );v27=v27 + (790 -(718 + 68)) ;v50=2 -1 ;end if (v50==((2242 -(1253 + 408)) -(277 + 303))) then return (v54 * (16777423 -(66 + 141))) + (v53 * (67269 -(1498 + (389 -154)))) + (v52 * (159 + 97)) + v51 ;end end end local function v37()local v55=v36();local v56=v36();local v57=4 -3 ;local v58=(v30(v56,546 -((2382 -1865) + 28) ,(150 -96) -34 ) * ((2 -0)^(54 -22))) + v55 ;local v59=v30(v56,38 -(6 + 11) ,115 -84 );local v60=((v30(v56,27 + 5 )==(1107 -(963 + 143))) and  -1) or (1662 -(1285 + 376)) ;if (v59==(0 + 0)) then if (v58==(0 -(1474 -(763 + 711)))) then return v60 * (0 -0) ;else v59=3 -2 ;v57=0 + 0 ;end elseif (v59==(5120 -3073)) then return ((v58==(0 + 0)) and (v60 * ((2 -1)/(0 + 0)))) or (v60 * NaN) ;end return v9(v60,v59-(1437 -(391 + 23)) ) * (v57 + (v58/(((2355 -(1239 + 613)) -(92 + 171 + 238))^(480 -(55 + 373))))) ;end local function v38(v39)local v61=1428 -(925 + 503) ;local v62;local v63;while true do if (v61==((1005 -(11 + 40)) -(813 + 138))) then return v7(v63);end if (v61==((1053 -(1047 + 3)) -2)) then v62=v4(v25,v27,(v27 + v39) -((3924 -2401) -(274 + 1248)) );v27=v27 + v39 ;v61=2 + 0 ;end if (v61==(0 + 0)) then v62=nil;if  not v39 then local v117=(0 + 0) -0 ;while true do if (v117==(0 -0)) then v39=v36();if (v39==(0 -0)) then return "";end break;end end end v61=1 + 0 ;end if (v61==(919 -(85 + 639 + 193))) then v63={};for v104=1974 -(82 + 1891) , #v62 do v63[v104]=v3(v2(v4(v62,v104,v104)));end v61=3 + 0 ;end end end local v40=v36;local function v41(...)return {...},v13("#",...);end local function v42()local v64=1312 -(1253 + 59) ;local v65;local v66;local v67;local v68;local v69;local v70;while true do if (v64==3) then local v95=1688 -(1165 + 523) ;while true do if (v95==(70 -(7 + 62))) then return v68;end if (v95~=0) then else local v122=967 -(879 + 88) ;while true do if (v122~=1) then else v95=1885 -(484 + 1400) ;break;end if (v122==0) then for v127=645 -(587 + 57) ,v36() do v66[v127-(1 + 0) ]=v42();end for v129=1,v36() do v67[v129]=v36();end v122=2 -1 ;end end end end end if (v64==2) then for v106=1,v69 do local v107=0;local v108;local v109;local v110;local v111;while true do if (v107==0) then v108=0;v109=nil;v107=1;end if (v107~=(425 -(222 + 201))) then else while true do if (v108==0) then v109=851 -(508 + 343) ;v110=nil;v108=1 + 0 ;end if (v108~=1) then else v111=nil;while true do if (v109==0) then local v133=254 -(150 + 104) ;local v134;while true do if (v133~=0) then else v134=0;while true do if (v134~=0) then else v110=v34();v111=nil;v134=461 -(389 + 71) ;end if (v134==1) then v109=1;break;end end break;end end end if (v109==1) then if (v110==1) then v111=v34()~=(0 + 0) ;elseif (v110==(4 -2)) then v111=v37();elseif (v110~=(7 -4)) then else v111=v38();end v70[v106]=v111;break;end end break;end end break;end if (v107~=1) then else v110=nil;v111=nil;v107=2;end end end v68[3]=v34();for v112=1 -0 ,v36() do local v113=0;local v114;local v115;local v116;while true do if (v113==0) then v114=0 + 0 ;v115=nil;v113=821 -(755 + 65) ;end if (1==v113) then v116=nil;while true do if ((1 + 0)==v114) then while true do if (v115==0) then v116=v34();if (v30(v116,1,3 -2 )==0) then local v136=0;local v137;local v138;local v139;local v140;while true do if (v136==(2 -0)) then while true do if (v137==3) then if (v30(v139,2 + 1 ,4 -1 )~=1) then else v140[4]=v70[v140[8 -4 ]];end v65[v112]=v140;break;end if (v137~=(1 + 0)) then else local v204=0 -0 ;while true do if (v204==0) then local v219=0;while true do if (v219==0) then v140={v35(),v35(),nil,nil};if (v138==(0 -0)) then local v264=0 -0 ;local v265;while true do if (v264==(0 -0)) then v265=0 -0 ;while true do if (v265~=(0 -0)) then else v140[3]=v35();v140[4]=v35();break;end end break;end end elseif (v138==(999 -(438 + 560))) then v140[6 -3 ]=v36();elseif (v138==2) then v140[536 -(529 + 4) ]=v36() -(2^16) ;elseif (v138==3) then local v292=0 -0 ;while true do if (v292==0) then v140[3]=v36() -(2^16) ;v140[4]=v35();break;end end end v219=1;end if (1==v219) then v204=1 -0 ;break;end end end if (v204~=(1 + 0)) then else v137=617 -(211 + 404) ;break;end end end if (v137~=0) then else local v205=0 -0 ;local v206;while true do if (v205~=(1494 -(1465 + 29))) then else v206=0;while true do if ((0 -0)==v206) then local v254=1951 -(1569 + 382) ;while true do if (v254==(0 + 0)) then v138=v30(v116,2,1964 -(757 + 1204) );v139=v30(v116,7 -3 ,200 -(14 + 180) );v254=1 + 0 ;end if (1==v254) then v206=424 -(356 + 67) ;break;end end end if ((1242 -(746 + 495))==v206) then v137=1;break;end end break;end end end if (v137~=(3 -1)) then else local v207=1151 -(604 + 547) ;while true do if (v207~=(0 -0)) then else if (v30(v139,1 -0 ,1)==(1 + 0)) then v140[2]=v70[v140[2]];end if (v30(v139,4 -2 ,2)==(3 -2)) then v140[3]=v70[v140[63 -(9 + 51) ]];end v207=1024 -(859 + 164) ;end if (v207==(3 -2)) then v137=825 -(736 + 86) ;break;end end end end break;end if (v136==(2 -1)) then v139=nil;v140=nil;v136=2;end if (v136==(0 -0)) then v137=868 -(529 + 339) ;v138=nil;v136=1;end end end break;end end break;end if (v114~=(0 + 0)) then else v115=0;v116=nil;v114=1 + 0 ;end end break;end end end v64=2 + 1 ;end if (1~=v64) then else local v97=0 + 0 ;local v98;while true do if (v97==(0 -0)) then v98=0 + 0 ;while true do if (v98~=(0 -0)) then else local v125=0;while true do if (v125==(3 -2)) then v98=2 -1 ;break;end if (v125~=(0 + 0)) then else v68={v65,v66,nil,v67};v69=v36();v125=4 -3 ;end end end if (v98~=1) then else v70={};v64=2;break;end end break;end end end if (v64~=0) then else local v99=0;while true do if (v99==(1896 -(1094 + 802))) then v65={};v66={};v99=1;end if (v99==(1 -0)) then v67={};v64=1 + 0 ;break;end end end end end local function v43(v44,v45,v46)local v71=v44[1];local v72=v44[2];local v73=v44[3];return function(...)local v74=1;local v75= -1;local v76={...};local v77=v13("#",...) -1 ;local function v78()local v85=v71;local v86=v72;local v87=v73;local v88=v41;local v89={};local v90={};local v91={};for v100=1705 -(433 + (4383 -3111)) ,v77 do if ((v100>=v87) or ((11649 -7323)>=(113 + 4528))) then v89[v100-v87 ]=v76[v100 + (1462 -(911 + 550)) ];else v91[v100]=v76[v100 + (1978 -(1903 + 74)) ];end end local v92=(v77-v87) + 1 ;local v93;local v94;while true do local v101=1821 -(48 + 1773) ;local v102;while true do if ((v101==0) or (4690<(785 + 12))) then v102=0 -0 ;while true do if ((v102==(3 -2)) or ((2644 + 1908 + (562 -(243 + 210)))<=1827)) then if ((v94<=((282 -(17 + 251)) -2)) or (2573>(2639 + 619))) then if ((v94<=((1468 -(515 + 950)) + 2)) or ((5017 -(300 + 1099 + 278))>(4882 -(179 + 96)))) then if (((8453 -6624)<=(13461 -9627)) and (v94<=(1 + 1))) then if (((782 + 129)==(1128 -217)) and (v94<=(0 -0))) then local v141=0 -0 ;local v142;local v143;while true do if ((4790>2808) and (v141==(419 -((2001 -(444 + 1492)) + 354)))) then v142=0 + 0 ;v143=nil;v141=1 + 0 ;end if ((2884>=(552 -(107 + 288))) and (v141==(1 + 0))) then while true do if ((1732==(4745 -(4225 -1212))) and ((0 -(0 + 0))==v142)) then v143=v93[804 -(735 + 67) ];v91[v143](v14(v91,v143 + 1 + 0 ,v75));break;end end break;end end elseif ((v94>(896 -(705 + 190))) or (3302>4067)) then local v159=0 -(1463 -(1299 + 164)) ;local v160;local v161;while true do if ((v159==(1092 -(432 + 660))) or ((2209 + 317)==(1022 -(20 + 59)))) then v160=1096 -(159 + 937) ;v161=nil;v159=1;end if (((6559 -(1651 + 100))>(1775 + 779)) and (v159==(1044 -(195 + 848)))) then while true do if (((536 + 850 + 312)>(4 + 276)) and (v160==(0 -0))) then v161=v93[1 + 1 ];v91[v161]=v91[v161]();break;end end break;end end else v91[v93[3 -1 ]]=v46[v93[3]];end elseif (((4059 -(11500 -9100))<=(1174 + 1973)) and (v94<=(2 + 1))) then local v144=(568 -(64 + 504)) -0 ;local v145;local v146;local v147;local v148;local v149;while true do if ((v144==(429 -(124 + 303))) or ((4522 -(200 + 72))<(5465 -((1128 -611) + 1403)))) then v149=nil;while true do if (((6763 -((4121 -2849) + 579))>=(5496 -(7895 -4862))) and (v145==(2 + 0))) then for v220=v146,v75 do local v221=0;local v222;while true do if ((v221==0) or ((68 + 225)>(4797 -(269 + 277)))) then v222=1537 -(766 + 771) ;while true do if (((6039 -4277)<=(6139 -3598)) and (0==v222)) then v149=v149 + (2 -1) ;v91[v220]=v147[v149];break;end end break;end end end break;end if ((v145==(703 -(541 + 162))) or ((3638 -(11 + 471))>=3173)) then local v215=784 -(95 + 689) ;while true do if (((3902 -(106 + (1421 -(418 + 587))))<=4094) and ((1 + 0)==v215)) then v145=1;break;end if (((0 + 0)==v215) or (1557>=4706)) then v146=v93[1442 -(1033 + 407) ];v147,v148=v88(v91[v146](v91[v146 + 1 ]));v215=1 + 0 ;end end end if ((v145==((1 -0) + 0)) or (2843==(1922 -(117 + 221)))) then local v216=0 -0 ;while true do if (((8501 -(5805 -1386))>=(1057 -(287 + (1117 -805)))) and (v216==1)) then v145=1 + 1 ;break;end if ((v216==(0 -0)) or (((7680 -(387 + 976)) -3078)==(3287 -(400 + 854)))) then v75=(v148 + v146) -(1 + 0) ;v149=0 -0 ;v216=285 -(101 + 145 + 38) ;end end end end break;end if ((v144==(1 + 0)) or ((5379 -(434 + 591))>=(6422 -(414 + 1291)))) then v147=nil;v148=nil;v144=(835 + 424) -(131 + (4378 -3252)) ;end if (((2249 -(90 + 354 + 476))==(1241 + 88)) and (v144==0)) then v145=0 + 0 ;v146=nil;v144=1 -0 ;end end elseif (((3788 -(87 + 1392))==2309) and (v94>(3 + 1))) then if (((5374 -3306)==(3099 -((610 -442) + (1694 -831)))) and (v93[2]==v91[v93[(1542 -(501 + 109)) -(232 + 696) ]])) then v74=v74 + 1 ;else v74=v93[8 -5 ];end else for v201=v93[2 + 0 ],v93[3] do v91[v201]=nil;end end elseif ((v94<=((1613 + 64) -(671 + 998))) or ((810 + 560)==1843)) then if (((4676 -2251)>=(4470 -3501)) and (v94<=6)) then v91[v93[2 -0 ]]=v43(v86[v93[11 -8 ]],nil,v46);elseif ((v94>(4 + 3)) or ((4180 + 588)<3409)) then local v164=0 + 0 ;local v165;local v166;while true do if ((v164==0) or ((3418 + 1375)<=(4452 -(360 + 456 + 300)))) then v165=0;v166=nil;v164=(2 -0) -1 ;end if ((v164==1) or (((2551 -(420 + 274)) -446)<(1007 -(527 + 252)))) then while true do if ((2687>=1952) and (v165==(0 -0))) then v166=v93[2];v91[v166]=v91[v166](v14(v91,v166 + (366 -(232 + 133)) ,v75));break;end end break;end end elseif ((v91[v93[1233 -(73 + 1158) ]]==v93[4]) or ((462 + 3633)==4492)) then v74=v74 + (383 -(225 + 157)) ;else v74=v93[3];end elseif ((v94<=(535 -(130 + 395))) or (107==(2452 + 805))) then if ((v94==9) or (4330<2698)) then local v167=910 -((2686 -(1065 + 793)) + 82) ;local v168;while true do if ((v167==(0 -0)) or (1813>(2026 + 158))) then v168=v93[1 + 1 ];v91[v168](v91[v168 + (631 -((576 -(141 + 412)) + (1092 -(423 + 62)))) ]);break;end end else v91[v93[1 + 1 ]]=v91[v93[1163 -(184 + 976) ]][v93[3 + 1 ]];end elseif ((1491>=(1748 -(254 + 791))) and (v94==(27 -16))) then local v171=1517 -(935 + 582) ;local v172;local v173;local v174;while true do if ((2494<(4200 + 79)) and (v171==((0 -0) + 0))) then v172=0 + 0 + (0 -0) ;v173=nil;v171=1 + (1145 -(557 + 588)) ;end if ((v171==(1 + 0)) or (((1055 -(540 + 135)) + 1296)>(543 + 3667))) then v174=nil;while true do if (((140 + 3551)>842) and (v172==(0 + 0))) then local v230=0 -0 ;while true do if ((v230==(0 + 0)) or ((7672 -(4096 + 601))>(3726 + 191))) then v173=v93[2 + 0 ];v174={};v230=1 -0 ;end if ((3477>(2994 -(88 + 39))) and (v230==(1281 -(1201 + 79)))) then v172=2 -1 ;break;end end end if (((6097 -2039)>(504 + 815)) and (v172==(2 -1))) then for v245=1405 -(255 + (2423 -1274)) , #v90 do local v246=0;local v247;local v248;while true do if ((((1408 + 2257) -1227)==(7779 -(1107 + 4234))) and (v246==(1 + 0 + 0))) then while true do if (((0 + 0)==v247) or ((4847 -(286 + 1224))==(886 + 2950))) then v248=v90[v245];for v281=437 -(291 + 146) , #v248 do local v282=601 -(490 + (170 -(12 + 47))) ;local v283;local v284;local v285;local v286;local v287;while true do if ((v282==0) or (2745<=(1408 -(339 + 53)))) then v283=0 -0 ;v284=nil;v282=1 + 0 + 0 ;end if ((((1970 -(950 + 135)) + 224)<=(10480 -5987)) and ((1 + 0 + 0)==v282)) then v285=nil;v286=nil;v282=1699 -(273 + 1424) ;end if ((v282==(3 -1)) or ((3090 + 1397)<(608 + 1921))) then v287=nil;while true do if ((2765>=(267 -197)) and (v283==((609 -(564 + 44)) + (3 -2)))) then while true do if (((0 + 0)==v284) or ((5092 -(870 + 34))<(1835 + 2139))) then local v301=0 + 0 ;local v302;while true do if ((v301==(1828 -(637 + 1191))) or ((4564 -3408)>=(427 + 4270))) then v302=0 -0 ;while true do if (((1664 -(1268 + 395))==v302) or ((3397 -(336 + 154))>(458 + 149 + 3604))) then v284=1607 -(691 + 915) ;break;end if ((((3159 -(187 + 986)) + 830)>=(810 + 278)) and (v302==0)) then local v307=0;while true do if ((584==(741 -157)) and (v307==0)) then v285=v248[v281];v286=v285[1 + 0 ];v307=151 -(46 + 104) ;end if ((v307==((110 -(58 + 51)) + 0)) or ((17450 -12467)<((11101 -5745) -(462 + (2093 -(333 + 411)))))) then v302=1;break;end end end end break;end end end if (((1935 -(359 + 626))<(11644 -7815)) and (v284==(1 + (0 -0)))) then v287=v285[2];if (((v286==v91) and (v287>=v173)) or (1001>((1953 -(9 + 540)) + 485))) then local v304=(1638 -1056) -(403 + 179) ;local v305;local v306;while true do if ((((2135 -(301 + 1452)) -(80 + 302))==v304) or (3230>(20783 -16035))) then v305=1623 -(1093 + 530) ;v306=nil;v304=1172 -(321 + 850) ;end if ((v304==1) or ((832 + 3300)<=(2054 -769))) then while true do if ((v305==0) or ((4113 + 72)==(5515 -(278 + 826)))) then v306=0 -0 ;while true do if ((1952<=(2752 + (4188 -3081))) and (v306==(1362 -(141 + 1221)))) then v174[v287]=v286[v287];v285[(1 + 0) -0 ]=v174;break;end end break;end end break;end end end break;end end break;end if ((714<(7785 -5802)) and (v283==0)) then local v300=0 + 0 ;while true do if ((2983<(9742 -6171)) and (v300==1)) then v283=1 + 0 ;break;end if (((9848 -7779)>(456 + 141)) and (v300==((815 -(80 + 735)) + 0))) then v284=0 -0 ;v285=nil;v300=3 -2 ;end end end if (((4592 -(1436 + 95))>1043) and (v283==1)) then v286=nil;v287=nil;v283=9 -7 ;end end break;end end end break;end end break;end if ((((4667 -(359 + 486)) -(360 + 830))>(7496 -5586)) and (v246==(0 -0))) then v247=0 -0 ;v248=nil;v246=262 -(165 + 96) ;end end end break;end end break;end end else local v175=1390 -(656 + 233 + 501) ;local v176;local v177;while true do if (((1290 -((1559 -(468 + 328)) + 243))>(399 -212)) and (v175==((846 -(582 + 264)) -0))) then v176=1031 -(754 + 277) ;v177=nil;v175=(2 -1) + 0 ;end if (((4427 -(435 + 40))==(4752 -(5 + 795))) and (v175==(659 -(614 + 44)))) then while true do if ((v176==0) or (((7499 -(1136 + 232)) -(1937 + (187 -(65 + 68))))<2552)) then v177=v93[3 -1 ];v91[v177](v14(v91,v177 + (1 -0) ,v93[3]));break;end end break;end end end elseif ((v94<=19) or (((2101 -(855 + 1081)) + 192)>=2713)) then if (((3863 -(634 + 13))>=((1588 + 1010) -((836 -367) + 562))) and (v94<=15)) then if (((108 + 125)<=2404) and (v94<=(1 + 12))) then v91[v93[1354 -(1220 + 132) ]]=v93[2 + (982 -(682 + 299)) ];elseif (((1163 -462)<(2004 -(245 + 673))) and (v94>(792 -(601 + 177)))) then v74=v93[3];else local v179=(0 + 0) -0 ;local v180;local v181;local v182;while true do if (((823 + (1129 -(640 + 20)))<(1501 + 1661)) and (v179==(1 -0))) then v182=nil;while true do if (((0 + 0)==v180) or (((7656 -2942) -(34 + 88))==(1301 + 373))) then local v232=0;while true do if ((v232==0) or ((5320 -(1158 + 96))<=((6581 -(553 + 1321)) -2059))) then v181=v93[2];v182=v91[v93[1144 -((1582 -902) + 461) ]];v232=1 + 0 ;end if (((1193 + 2224)<=(5220 -(1422 + (195 -132)))) and (v232==1)) then v180=1 + 0 ;break;end end end if ((v180==(702 -(569 + 132))) or ((4539 -(514 + 72))<=(388 -(565 -(238 + 132))))) then v91[v181 + 1 + 0 ]=v182;v91[v181]=v182[v93[4]];break;end end break;end if (((1602 -717)<978) and (v179==(537 -(356 + 181)))) then v180=0 -0 ;v181=nil;v179=1;end end end elseif ((v94<=(10 + 7)) or ((1420 + 2792)<=(2190 -(307 + 1637)))) then if ((v94>(29 -13)) or (4953<(1636 -859))) then local v183=0;local v184;local v185;local v186;while true do if ((v183==(1 + 0 + 0)) or ((1188 + 3081)<(104 + 2610))) then v186=nil;while true do if ((3145<=(6688 -(1577 + (560 -(79 + 117))))) and ((1 + 0)==v184)) then while true do if ((224<=(14130 -9925)) and (v185==(0 -0))) then v186=v93[1 + 1 ];v91[v186]=v91[v186](v14(v91,v186 + (59 -((49 -32) + 41)) ,v93[6 -3 ]));break;end end break;end if ((v184==0) or ((2943 -1891)>=(2907 -1337))) then local v236=1020 -(475 + 545) ;while true do if ((v236==(1 + 0)) or ((5763 -3755)==(878 + (2150 -504)))) then v184=493 -(81 + 411) ;break;end if ((v236==(17 -(4 + 13))) or (456>=(2671 -(1256 + 479)))) then v185=0 + 0 ;v186=nil;v236=1 + (0 -0) ;end end end end break;end if ((((1168 + 416) -(1212 + 372))==v183) or ((267 + 271 + 505)>(8351 -5314))) then v184=(1402 + 554) -(604 + 1352) ;v185=nil;v183=1 + 0 ;end end else v91[v93[2]]={};end elseif ((v94==(53 -35)) or (3179==(6621 -5218))) then local v188=1779 -(694 + 1085) ;local v189;local v190;local v191;local v192;while true do if (((1068 -(57 + 275))<=(135 + (5785 -(983 + 24)))) and (v188==((1819 -(1322 + 496)) + 1))) then while true do if ((v189==(135 -(18 + 116))) or ((1075 + 64 + 1283)>=(7702 -3947))) then local v237=0;while true do if (((41 + 76)==(117 + 0)) and (v237==(1111 -(683 + (949 -521))))) then v192={};v191=v11({},{__index=function(v260,v261)local v266=0 + 0 ;local v267;local v268;while true do if ((19<((4423 + 6123) -5950)) and ((1703 -(523 + 1179))==v266)) then while true do if (((2520 -(70 + 311))<(10071 -6694)) and ((0 + 0)==v267)) then local v293=0 -0 ;while true do if (((3452 -992)<3962) and (v293==(0 + 0))) then v268=v192[v261];return v268[1 + 0 ][v268[2]];end end end end break;end if ((v266==(889 -(58 + 831))) or ((1685 + 476)>(9883 -6941))) then v267=0 -0 ;v268=nil;v266=610 -(286 + 323) ;end end end,__newindex=function(v260,v261,v262)local v269=0;local v270;local v271;while true do if ((v269==0) or ((3053 -2410)==(280 -88))) then v270=0;v271=nil;v269=1899 -(492 + 1406) ;end if (((362 + 278)<=(3940 -(867 + 217))) and ((1 + 0)==v269)) then while true do if ((((1579 -790) + 1677)==((1272 -790) + 1984)) and (v270==0)) then v271=v192[v261];v271[1][v271[1 + 1 ]]=v262;break;end end break;end end end});v237=1876 -(41 + 987 + 847) ;end if ((v237==1) or ((284 + 493)>=(13752 -10067))) then v189=1 + 1 + 0 ;break;end end end if ((v189==((30 -(21 + 4)) -3)) or ((8999 -4629)<=(906 + 38 + 156))) then for v249=1,v93[418 -(357 + 57) ] do local v250=0 -0 ;local v251;local v252;while true do if (((0 -0)==v250) or ((7241 -2448)==(3419 -(97 + 58)))) then v251=0 + 0 ;v252=nil;v250=1;end if ((v250==(3 -2)) or ((8716 -5784)==(1534 + 106))) then while true do if (((122 + 31)<=(339 + 833)) and ((1 + 0)==v251)) then if (((2640 -(148 + 368))<(3785 -(233 + 689))) and (v252[4 -3 ]==(953 -(338 + 591)))) then v192[v249-(2 -(156 -(84 + 71))) ]={v91,v252[3]};else v192[v249-(1 + 0) ]={v45,v252[3]};end v90[ #v90 + 1 ]=v192;break;end if ((3851>=(944 + 236)) and (v251==(0 + 0))) then local v279=1188 -(583 + 605) ;while true do if ((1709<=(2495 + 1755)) and (v279==((2127 -(1088 + 438)) -(438 + 163)))) then v74=v74 + 1 + 0 ;v252=v85[v74];v279=1722 -(1064 + 657) ;end if (((1995 -(971 + 965))<(8434 -3510)) and ((24 -(21 + 2))==v279)) then v251=227 -((351 -189) + 64) ;break;end end end end break;end end end v91[v93[423 -(30 + 391) ]]=v43(v190,v191,v46);break;end if (((11729 -6988)>(377 -(28 + 60))) and (v189==0)) then local v239=0 -(0 + 0) ;while true do if ((v239==(0 + 0)) or ((5468 -(1177 + 326))<(4944 -3012))) then v190=v86[v93[1 + 2 ]];v191=nil;v239=(1847 -(372 + 211)) -(729 + 534) ;end if ((v239==(1 + 0)) or ((24 + 115)>(5225 -3550))) then v189=1 + 0 ;break;end end end end break;end if (((681 -(58 + 623))==v188) or (3153<(8261 -5447))) then v189=1113 -(414 + 699) ;v190=nil;v188=1 + 0 ;end if (((4001 + 124)>=(13160 -(26304 -15797))) and (v188==1)) then v191=nil;v192=nil;v188=2 + 0 + 0 ;end end else v91[v93[1251 -(553 + 696) ]][v93[4 -1 ]]=v91[v93[9 -5 ]];end elseif ((v94<=22) or ((760 + 1682)==(9682 -(2407 + 3569)))) then if ((v94<=(8 + 12)) or ((13963 -10907)<(1161 + 390))) then local v153=0;local v154;local v155;local v156;local v157;local v158;while true do if (((5079 -(187 + 71))>((316 -111) + 985)) and ((0 -0)==v153)) then v154=0 -0 ;v155=nil;v153=2 -1 ;end if (((3667 + 1177)==(5078 -(103 + 131))) and ((1 + 0)==v153)) then v156=nil;v157=nil;v153=6 -4 ;end if ((v153==(1 + 0 + 1)) or ((4542 -(24 + 9))<=(4636 -(137 + 149)))) then v158=nil;while true do if (((1816 -(1509 + 307))==v154) or ((15870 -11296)<=(7875 -3500))) then local v217=0;while true do if (((5620 -(409 + 480))>=(726 + 1455)) and (0==v217)) then v155=v93[1361 -(874 + (2424 -(1255 + 684))) ];v156,v157=v88(v91[v155](v14(v91,v155 + 1 ,v93[659 -(385 + 271) ])));v217=209 -(79 + 129) ;end if ((2820>=(2977 -(914 + 427))) and (v217==(1 + 0))) then v154=21 -(5 + 15) ;break;end end end if ((v154==(1 + 1)) or ((1049 + 118)==585)) then for v223=v155,v75 do local v224=0;local v225;while true do if ((((4150 + 441) -3324)<=(600 + 3092)) and (v224==(0 + 0))) then v225=(0 -0) -(0 -0) ;while true do if ((v225==0) or ((3476 -(1025 + (899 -693)))==(7697 -2958))) then v158=v158 + 1 + 0 ;v91[v223]=v156[v158];break;end end break;end end end break;end if (((2586 + 1442)<(283 + 3947)) and (v154==(3 -(2 -0)))) then local v218=1768 -(204 + 1564) ;while true do if ((v218==(1 -0)) or ((5246 -(635 + 114))<=(3040 -1621))) then v154=2 + 0 ;break;end if ((v218==0) or ((4275 -(486 + 668))<=(442 + 989))) then v75=(v157 + v155) -(51 -(28 + 22)) ;v158=0 -0 ;v218=4 -3 ;end end end end break;end end elseif ((v94>((4170 -2636) -(989 + (1691 -1167)))) or (((10787 -(1358 + 138)) -5773)<=(1975 -(55 + 11)))) then if (v91[v93[2 -0 ]] or ((54 + 25)>=(1636 + 95))) then v74=v74 + (1 -(1119 -(907 + 212))) ;else v74=v93[8 -5 ];end else v91[v93[3 -1 ]]=v45[v93[1124 -(967 + 154) ]];end elseif ((v94<=(47 -23)) or ((2408 -(19 + 1225))>=(2220 + 1333))) then if (((204 + 529)>=500) and (v94>(1462 -(66 + 1373)))) then v91[v93[3 -1 ]]=v91[v93[3 + (1702 -(1014 + 688)) ]];else v91[v93[2]][v93[7 -4 ]]=v93[4 + 0 ];end elseif (((1716 -((1113 -(261 + 428)) + 186))<=(30 + 3905)) and (v94==25)) then v91[v93[2 + 0 ]]();else do return;end end v74=v74 + (2 -1) ;break;end if ((v102==(0 + 0)) or ((7592 -5105)==(4029 -(192 + 1563)))) then local v126=1223 -(1145 + 78) ;while true do if ((v126==(1355 -(401 + 953))) or ((9693 -(6327 -(377 + 537)))<=4262)) then v102=(1 -0) + 0 ;break;end if (((9838 -6232)>=(3134 -2133)) and (v126==(0 -0))) then v93=v85[v74];v94=v93[1 + 0 ];v126=1 -0 ;end end end end break;end end end end A,B=v41(v12(v78));if  not A[1] then local v103=v44[4][v74] or "?" ;error("Script error at ["   .. v103   .. "]:"   .. A[2] );else return v14(A,2,B);end end;end return v43(v42(),{},v26)(...);end;vv10(),...);break;end if (v0==4) then v13=select;v14=unpack or table.unpack ;v15=tonumber;v0=5;end end end
